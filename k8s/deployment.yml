kind: Deployment
apiVersion: apps/v1
metadata:
  name: phpfpm-nginx-example
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: php-example
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: php-example
    spec:
      volumes:
        # Create the shared files volume to be used in both pods
        - name: shared-files2
          emptyDir: {}
        # Add the ConfigMap we declared above as a volume for the pod
        - name: nginx-config-volume
          configMap:
            name: nginx-config
      containers:
        # Our PHP-FPM application
        - image: ghcr.io/lenny87/php-example:0.2
          name: app
          volumeMounts:
            - name: shared-files2
              mountPath: /var/www/html
          # Important! After this container has started, the PHP files
          # in our Docker image aren't in the shared volume. We need to 
          # get them into the shared volume. If we tried to write directly
          # to this volume from our Docker image the files wouldn't appear
          # in the nginx container.
          #
          # So, after the container has started, copy the PHP files from this
          # container's local filesystem (/app -- added via the Docker image) 
          # to the shared volume, which is mounted at /var/www/html.
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]    
        # Our nginx container, which uses the configuration declared above,
        # along with the files shared with the PHP-FPM app.
        - image: nginx
          name: nginx
          volumeMounts:
            - name: shared-files2
              mountPath: /var/www/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
